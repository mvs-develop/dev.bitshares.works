<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structgraphene_1_1protocol_1_1asset__claim__pool__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::asset_claim_pool_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1_1fee__parameters__type" prot="public">graphene::protocol::asset_claim_pool_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a6c492092ba7c1ddd7967473c0c78c2f1" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::asset_claim_pool_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="560" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a679c3a4e130d660fdb1843ac3caaf21e" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_claim_pool_operation::issuer</definition>
        <argsstring></argsstring>
        <name>issuer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="561" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1ab9426b0d838f260615392f14df5e4642" prot="public" static="no" mutable="no">
        <type>asset_id_type</type>
        <definition>asset_id_type graphene::protocol::asset_claim_pool_operation::asset_id</definition>
        <argsstring></argsstring>
        <name>asset_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="562" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a6dbff63a7581b838c425b7de8d5e0019" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::asset_claim_pool_operation::amount_to_claim</definition>
        <argsstring></argsstring>
        <name>amount_to_claim</name>
        <briefdescription>
<para>fee.asset_id must != asset_id </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="563" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a86641cce3e855e9b465dccbb158bc59b" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::asset_claim_pool_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
<para>core asset </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="564" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="564" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a5f5618b3539ed364165cb2d8fff959ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_claim_pool_operation::fee_payer</definition>
        <argsstring>() const </argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="566" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="566" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a9655640c05104743b2b30ef6073e88bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::asset_claim_pool_operation::validate</definition>
        <argsstring>() const </argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="567" column="1" bodyfile="libraries/protocol/asset_ops.cpp" bodystart="332" bodyend="337"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Transfers DNA from the fee pool of a specified asset back to the issuer&apos;s balance. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fee</parametername>
</parameternamelist>
<parameterdescription>
<para>Payment for the operation execution </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>issuer</parametername>
</parameternamelist>
<parameterdescription>
<para>Account which will be used for transfering DNA </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>asset_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of the asset whose fee pool is going to be drained </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amount_to_claim</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of DNA to claim from the fee pool </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extensions</parametername>
</parameternamelist>
<parameterdescription>
<para>Field for future expansion</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a6c492092ba7c1ddd7967473c0c78c2f1" kindref="member">fee</ref> must be paid in the asset other than the one whose pool is being drained </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a6dbff63a7581b838c425b7de8d5e0019" kindref="member">amount_to_claim</ref> should be specified in the core asset </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a6dbff63a7581b838c425b7de8d5e0019" kindref="member">amount_to_claim</ref> should be nonnegative </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="770">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="769">
        <label>graphene::protocol::asset_claim_pool_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation"/>
        <childnode refid="770" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="775">
        <label>account_id_type</label>
      </node>
      <node id="774">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="772">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="773">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="774" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="771">
        <label>graphene::protocol::asset_claim_pool_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation"/>
        <childnode refid="772" relation="public-inheritance">
        </childnode>
        <childnode refid="773" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>amount_to_claim</edgelabel>
        </childnode>
        <childnode refid="775" relation="usage">
          <edgelabel>issuer</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="555" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="554" bodyend="568"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a6dbff63a7581b838c425b7de8d5e0019" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>amount_to_claim</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1ab9426b0d838f260615392f14df5e4642" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>asset_id</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1afd01efa3e06367c572512e381b1106fb" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a86641cce3e855e9b465dccbb158bc59b" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a6c492092ba7c1ddd7967473c0c78c2f1" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a5f5618b3539ed364165cb2d8fff959ae" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aded12887f115b2bfa54ecd59540fa242" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a6ea245f980406ab52fdb90283e687d1c" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0742a4b91de875366ec466a5b67b2811" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a679c3a4e130d660fdb1843ac3caaf21e" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>issuer</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__pool__operation_1a9655640c05104743b2b30ef6073e88bf" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a41d0a14a070ac634be11f30dbf559935" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_pool_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
